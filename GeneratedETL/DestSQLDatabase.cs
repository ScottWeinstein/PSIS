#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PSIS
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	public partial class DestSQLDatabase : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insert__RefactorLog(__RefactorLog instance);
    partial void Update__RefactorLog(__RefactorLog instance);
    partial void Delete__RefactorLog(__RefactorLog instance);
    partial void InsertStaging_Accounts(Staging_Accounts instance);
    partial void UpdateStaging_Accounts(Staging_Accounts instance);
    partial void DeleteStaging_Accounts(Staging_Accounts instance);
    partial void InsertStaging_Desks(Staging_Desks instance);
    partial void UpdateStaging_Desks(Staging_Desks instance);
    partial void DeleteStaging_Desks(Staging_Desks instance);
    partial void InsertDW_DimSide(DW_DimSide instance);
    partial void UpdateDW_DimSide(DW_DimSide instance);
    partial void DeleteDW_DimSide(DW_DimSide instance);
    partial void InsertDW_DimSymbol(DW_DimSymbol instance);
    partial void UpdateDW_DimSymbol(DW_DimSymbol instance);
    partial void DeleteDW_DimSymbol(DW_DimSymbol instance);
    partial void InsertDW_FactTrades(DW_FactTrades instance);
    partial void UpdateDW_FactTrades(DW_FactTrades instance);
    partial void DeleteDW_FactTrades(DW_FactTrades instance);
    partial void InsertStaging_Symbols(Staging_Symbols instance);
    partial void UpdateStaging_Symbols(Staging_Symbols instance);
    partial void DeleteStaging_Symbols(Staging_Symbols instance);
    partial void InsertStaging_Traders(Staging_Traders instance);
    partial void UpdateStaging_Traders(Staging_Traders instance);
    partial void DeleteStaging_Traders(Staging_Traders instance);
    #endregion
		
		public DestSQLDatabase(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DestSQLDatabase(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DestSQLDatabase(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DestSQLDatabase(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<@__RefactorLog> @__RefactorLog
		{
			get
			{
				return this.GetTable<@__RefactorLog>();
			}
		}
		
		public System.Data.Linq.Table<Staging_Accounts> Staging_Accounts
		{
			get
			{
				return this.GetTable<Staging_Accounts>();
			}
		}
		
		public System.Data.Linq.Table<Staging_Desks> Staging_Desks
		{
			get
			{
				return this.GetTable<Staging_Desks>();
			}
		}
		
		public System.Data.Linq.Table<DW_DimExecutionTime> DW_DimExecutionTime
		{
			get
			{
				return this.GetTable<DW_DimExecutionTime>();
			}
		}
		
		public System.Data.Linq.Table<DW_DimSide> DW_DimSide
		{
			get
			{
				return this.GetTable<DW_DimSide>();
			}
		}
		
		public System.Data.Linq.Table<DW_DimSymbol> DW_DimSymbol
		{
			get
			{
				return this.GetTable<DW_DimSymbol>();
			}
		}
		
		public System.Data.Linq.Table<DW_FactTrades> DW_FactTrades
		{
			get
			{
				return this.GetTable<DW_FactTrades>();
			}
		}
		
		public System.Data.Linq.Table<Staging_SrcTableSmall> Staging_SrcTableSmall
		{
			get
			{
				return this.GetTable<Staging_SrcTableSmall>();
			}
		}
		
		public System.Data.Linq.Table<Staging_Symbols> Staging_Symbols
		{
			get
			{
				return this.GetTable<Staging_Symbols>();
			}
		}
		
		public System.Data.Linq.Table<Staging_Traders> Staging_Traders
		{
			get
			{
				return this.GetTable<Staging_Traders>();
			}
		}
		
		public System.Data.Linq.Table<Staging_TradersToDesksMap> Staging_TradersToDesksMap
		{
			get
			{
				return this.GetTable<Staging_TradersToDesksMap>();
			}
		}
		
		public System.Data.Linq.Table<Staging_Trades> Staging_Trades
		{
			get
			{
				return this.GetTable<Staging_Trades>();
			}
		}
		
		public System.Data.Linq.Table<Staging_TradesDWView> Staging_TradesDWView
		{
			get
			{
				return this.GetTable<Staging_TradesDWView>();
			}
		}
		
		public System.Data.Linq.Table<Staging_TradesDWViewInvalidExtraCol> Staging_TradesDWViewInvalidExtraCol
		{
			get
			{
				return this.GetTable<Staging_TradesDWViewInvalidExtraCol>();
			}
		}
		
		public System.Data.Linq.Table<Staging_TradesDWViewInvalidMissingCol> Staging_TradesDWViewInvalidMissingCol
		{
			get
			{
				return this.GetTable<Staging_TradesDWViewInvalidMissingCol>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.__RefactorLog")]
	public partial class @__RefactorLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _OperationKey;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOperationKeyChanging(System.Guid value);
    partial void OnOperationKeyChanged();
    #endregion
		
		public @__RefactorLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperationKey", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid OperationKey
		{
			get
			{
				return this._OperationKey;
			}
			set
			{
				if ((this._OperationKey != value))
				{
					this.OnOperationKeyChanging(value);
					this.SendPropertyChanging();
					this._OperationKey = value;
					this.SendPropertyChanged("OperationKey");
					this.OnOperationKeyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.Accounts")]
	public partial class Staging_Accounts : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountId;
		
		private string _AccountName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIdChanging(int value);
    partial void OnAccountIdChanged();
    partial void OnAccountNameChanging(string value);
    partial void OnAccountNameChanged();
    #endregion
		
		public Staging_Accounts()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountId
		{
			get
			{
				return this._AccountId;
			}
			set
			{
				if ((this._AccountId != value))
				{
					this.OnAccountIdChanging(value);
					this.SendPropertyChanging();
					this._AccountId = value;
					this.SendPropertyChanged("AccountId");
					this.OnAccountIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string AccountName
		{
			get
			{
				return this._AccountName;
			}
			set
			{
				if ((this._AccountName != value))
				{
					this.OnAccountNameChanging(value);
					this.SendPropertyChanging();
					this._AccountName = value;
					this.SendPropertyChanged("AccountName");
					this.OnAccountNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.Desks")]
	public partial class Staging_Desks : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DeskId;
		
		private string _DeskName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDeskIdChanging(int value);
    partial void OnDeskIdChanged();
    partial void OnDeskNameChanging(string value);
    partial void OnDeskNameChanged();
    #endregion
		
		public Staging_Desks()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeskId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DeskId
		{
			get
			{
				return this._DeskId;
			}
			set
			{
				if ((this._DeskId != value))
				{
					this.OnDeskIdChanging(value);
					this.SendPropertyChanging();
					this._DeskId = value;
					this.SendPropertyChanged("DeskId");
					this.OnDeskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeskName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string DeskName
		{
			get
			{
				return this._DeskName;
			}
			set
			{
				if ((this._DeskName != value))
				{
					this.OnDeskNameChanging(value);
					this.SendPropertyChanging();
					this._DeskName = value;
					this.SendPropertyChanged("DeskName");
					this.OnDeskNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="DW.DimExecutionTime")]
	public partial class DW_DimExecutionTime
	{
		
		private System.DateTime _ExecutionTimeKey;
		
		public DW_DimExecutionTime()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionTimeKey", DbType="DateTime NOT NULL")]
		public System.DateTime ExecutionTimeKey
		{
			get
			{
				return this._ExecutionTimeKey;
			}
			set
			{
				if ((this._ExecutionTimeKey != value))
				{
					this._ExecutionTimeKey = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="DW.DimSide")]
	public partial class DW_DimSide : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SideKey;
		
		private string _SideValue;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSideKeyChanging(int value);
    partial void OnSideKeyChanged();
    partial void OnSideValueChanging(string value);
    partial void OnSideValueChanged();
    #endregion
		
		public DW_DimSide()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SideKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SideKey
		{
			get
			{
				return this._SideKey;
			}
			set
			{
				if ((this._SideKey != value))
				{
					this.OnSideKeyChanging(value);
					this.SendPropertyChanging();
					this._SideKey = value;
					this.SendPropertyChanged("SideKey");
					this.OnSideKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SideValue", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string SideValue
		{
			get
			{
				return this._SideValue;
			}
			set
			{
				if ((this._SideValue != value))
				{
					this.OnSideValueChanging(value);
					this.SendPropertyChanging();
					this._SideValue = value;
					this.SendPropertyChanged("SideValue");
					this.OnSideValueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="DW.DimSymbol")]
	public partial class DW_DimSymbol : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SymbolKey;
		
		private string _SymbolValue;
		
		private string _FullName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSymbolKeyChanging(int value);
    partial void OnSymbolKeyChanged();
    partial void OnSymbolValueChanging(string value);
    partial void OnSymbolValueChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    #endregion
		
		public DW_DimSymbol()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SymbolKey
		{
			get
			{
				return this._SymbolKey;
			}
			set
			{
				if ((this._SymbolKey != value))
				{
					this.OnSymbolKeyChanging(value);
					this.SendPropertyChanging();
					this._SymbolKey = value;
					this.SendPropertyChanged("SymbolKey");
					this.OnSymbolKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string SymbolValue
		{
			get
			{
				return this._SymbolValue;
			}
			set
			{
				if ((this._SymbolValue != value))
				{
					this.OnSymbolValueChanging(value);
					this.SendPropertyChanging();
					this._SymbolValue = value;
					this.SendPropertyChanged("SymbolValue");
					this.OnSymbolValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="DW.FactTrades")]
	public partial class DW_FactTrades : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _TradeKey;
		
		private System.DateTime _ExecutionTimeKey;
		
		private int _SideKey;
		
		private int _SymbolKey;
		
		private decimal _Price;
		
		private double _Size;
		
		private decimal _ExchangeFee;
		
		private decimal _BrokerFee;
		
		private decimal _SECFee;
		
		private decimal _MarginFee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTradeKeyChanging(long value);
    partial void OnTradeKeyChanged();
    partial void OnExecutionTimeKeyChanging(System.DateTime value);
    partial void OnExecutionTimeKeyChanged();
    partial void OnSideKeyChanging(int value);
    partial void OnSideKeyChanged();
    partial void OnSymbolKeyChanging(int value);
    partial void OnSymbolKeyChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnSizeChanging(double value);
    partial void OnSizeChanged();
    partial void OnExchangeFeeChanging(decimal value);
    partial void OnExchangeFeeChanged();
    partial void OnBrokerFeeChanging(decimal value);
    partial void OnBrokerFeeChanged();
    partial void OnSECFeeChanging(decimal value);
    partial void OnSECFeeChanged();
    partial void OnMarginFeeChanging(decimal value);
    partial void OnMarginFeeChanged();
    #endregion
		
		public DW_FactTrades()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeKey", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long TradeKey
		{
			get
			{
				return this._TradeKey;
			}
			set
			{
				if ((this._TradeKey != value))
				{
					this.OnTradeKeyChanging(value);
					this.SendPropertyChanging();
					this._TradeKey = value;
					this.SendPropertyChanged("TradeKey");
					this.OnTradeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionTimeKey", DbType="DateTime NOT NULL")]
		public System.DateTime ExecutionTimeKey
		{
			get
			{
				return this._ExecutionTimeKey;
			}
			set
			{
				if ((this._ExecutionTimeKey != value))
				{
					this.OnExecutionTimeKeyChanging(value);
					this.SendPropertyChanging();
					this._ExecutionTimeKey = value;
					this.SendPropertyChanged("ExecutionTimeKey");
					this.OnExecutionTimeKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SideKey", DbType="Int NOT NULL")]
		public int SideKey
		{
			get
			{
				return this._SideKey;
			}
			set
			{
				if ((this._SideKey != value))
				{
					this.OnSideKeyChanging(value);
					this.SendPropertyChanging();
					this._SideKey = value;
					this.SendPropertyChanged("SideKey");
					this.OnSideKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolKey", DbType="Int NOT NULL")]
		public int SymbolKey
		{
			get
			{
				return this._SymbolKey;
			}
			set
			{
				if ((this._SymbolKey != value))
				{
					this.OnSymbolKeyChanging(value);
					this.SendPropertyChanging();
					this._SymbolKey = value;
					this.SendPropertyChanged("SymbolKey");
					this.OnSymbolKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Float NOT NULL")]
		public double Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExchangeFee", DbType="Money NOT NULL")]
		public decimal ExchangeFee
		{
			get
			{
				return this._ExchangeFee;
			}
			set
			{
				if ((this._ExchangeFee != value))
				{
					this.OnExchangeFeeChanging(value);
					this.SendPropertyChanging();
					this._ExchangeFee = value;
					this.SendPropertyChanged("ExchangeFee");
					this.OnExchangeFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrokerFee", DbType="Money NOT NULL")]
		public decimal BrokerFee
		{
			get
			{
				return this._BrokerFee;
			}
			set
			{
				if ((this._BrokerFee != value))
				{
					this.OnBrokerFeeChanging(value);
					this.SendPropertyChanging();
					this._BrokerFee = value;
					this.SendPropertyChanged("BrokerFee");
					this.OnBrokerFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SECFee", DbType="Money NOT NULL")]
		public decimal SECFee
		{
			get
			{
				return this._SECFee;
			}
			set
			{
				if ((this._SECFee != value))
				{
					this.OnSECFeeChanging(value);
					this.SendPropertyChanging();
					this._SECFee = value;
					this.SendPropertyChanged("SECFee");
					this.OnSECFeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginFee", DbType="Money NOT NULL")]
		public decimal MarginFee
		{
			get
			{
				return this._MarginFee;
			}
			set
			{
				if ((this._MarginFee != value))
				{
					this.OnMarginFeeChanging(value);
					this.SendPropertyChanging();
					this._MarginFee = value;
					this.SendPropertyChanged("MarginFee");
					this.OnMarginFeeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.SrcTableSmall")]
	public partial class Staging_SrcTableSmall
	{
		
		private int _Column_1;
		
		private System.Nullable<int> _Column_2;
		
		private string _Column_3;
		
		public Staging_SrcTableSmall()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="column_1", Storage="_Column_1", DbType="Int NOT NULL")]
		public int Column_1
		{
			get
			{
				return this._Column_1;
			}
			set
			{
				if ((this._Column_1 != value))
				{
					this._Column_1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="column_2", Storage="_Column_2", DbType="Int")]
		public System.Nullable<int> Column_2
		{
			get
			{
				return this._Column_2;
			}
			set
			{
				if ((this._Column_2 != value))
				{
					this._Column_2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="column_3", Storage="_Column_3", DbType="VarChar(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Column_3
		{
			get
			{
				return this._Column_3;
			}
			set
			{
				if ((this._Column_3 != value))
				{
					this._Column_3 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.Symbols")]
	public partial class Staging_Symbols : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SymbolId;
		
		private string _Symbol;
		
		private string _FullName;
		
		private string _Exchange;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSymbolIdChanging(int value);
    partial void OnSymbolIdChanged();
    partial void OnSymbolChanging(string value);
    partial void OnSymbolChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnExchangeChanging(string value);
    partial void OnExchangeChanged();
    #endregion
		
		public Staging_Symbols()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					this.OnSymbolIdChanging(value);
					this.SendPropertyChanging();
					this._SymbolId = value;
					this.SendPropertyChanged("SymbolId");
					this.OnSymbolIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this.OnSymbolChanging(value);
					this.SendPropertyChanging();
					this._Symbol = value;
					this.SendPropertyChanged("Symbol");
					this.OnSymbolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Exchange", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Exchange
		{
			get
			{
				return this._Exchange;
			}
			set
			{
				if ((this._Exchange != value))
				{
					this.OnExchangeChanging(value);
					this.SendPropertyChanging();
					this._Exchange = value;
					this.SendPropertyChanged("Exchange");
					this.OnExchangeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.Traders")]
	public partial class Staging_Traders : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TraderId;
		
		private string _TraderName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTraderIdChanging(int value);
    partial void OnTraderIdChanged();
    partial void OnTraderNameChanging(string value);
    partial void OnTraderNameChanged();
    #endregion
		
		public Staging_Traders()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraderId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int TraderId
		{
			get
			{
				return this._TraderId;
			}
			set
			{
				if ((this._TraderId != value))
				{
					this.OnTraderIdChanging(value);
					this.SendPropertyChanging();
					this._TraderId = value;
					this.SendPropertyChanged("TraderId");
					this.OnTraderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraderName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TraderName
		{
			get
			{
				return this._TraderName;
			}
			set
			{
				if ((this._TraderName != value))
				{
					this.OnTraderNameChanging(value);
					this.SendPropertyChanging();
					this._TraderName = value;
					this.SendPropertyChanged("TraderName");
					this.OnTraderNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.TradersToDesksMap")]
	public partial class Staging_TradersToDesksMap
	{
		
		private int _ToDMapId;
		
		private int _TraderId;
		
		private int _DeskId;
		
		public Staging_TradersToDesksMap()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ToDMapId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int ToDMapId
		{
			get
			{
				return this._ToDMapId;
			}
			set
			{
				if ((this._ToDMapId != value))
				{
					this._ToDMapId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraderId", DbType="Int NOT NULL")]
		public int TraderId
		{
			get
			{
				return this._TraderId;
			}
			set
			{
				if ((this._TraderId != value))
				{
					this._TraderId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeskId", DbType="Int NOT NULL")]
		public int DeskId
		{
			get
			{
				return this._DeskId;
			}
			set
			{
				if ((this._DeskId != value))
				{
					this._DeskId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.Trades")]
	public partial class Staging_Trades
	{
		
		private long _ExecutionId;
		
		private System.DateTime _TimeStamp;
		
		private string _Side;
		
		private int _TraderDeskMapId;
		
		private int _SymbolId;
		
		private int _CustomerId;
		
		private decimal _Price;
		
		private double _Size;
		
		public Staging_Trades()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecutionId", AutoSync=AutoSync.Always, DbType="BigInt NOT NULL IDENTITY", IsDbGenerated=true)]
		public long ExecutionId
		{
			get
			{
				return this._ExecutionId;
			}
			set
			{
				if ((this._ExecutionId != value))
				{
					this._ExecutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStamp
		{
			get
			{
				return this._TimeStamp;
			}
			set
			{
				if ((this._TimeStamp != value))
				{
					this._TimeStamp = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Side
		{
			get
			{
				return this._Side;
			}
			set
			{
				if ((this._Side != value))
				{
					this._Side = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TraderDeskMapId", DbType="Int NOT NULL")]
		public int TraderDeskMapId
		{
			get
			{
				return this._TraderDeskMapId;
			}
			set
			{
				if ((this._TraderDeskMapId != value))
				{
					this._TraderDeskMapId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SymbolId", DbType="Int NOT NULL")]
		public int SymbolId
		{
			get
			{
				return this._SymbolId;
			}
			set
			{
				if ((this._SymbolId != value))
				{
					this._SymbolId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="Int NOT NULL")]
		public int CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					this._CustomerId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Float NOT NULL")]
		public double Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this._Size = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.TradesDWView")]
	public partial class Staging_TradesDWView
	{
		
		private string _Symbol_SymbolValue;
		
		private string _Symbol_FullName;
		
		private string _IGNORE_Account_AccountName;
		
		private string _IGNORE_Desk_DeskName;
		
		private string _IGNORE_Trader_TraderName;
		
		private System.DateTime _FACT_ExecutionTimeKey;
		
		private string _Side_SideValue;
		
		private decimal _FACT_Price;
		
		private double _FACT_Size;
		
		private long _IGNORE_ExecutionId;
		
		private int _FACT_ExchangeFee;
		
		private int _FACT_BrokerFee;
		
		private int _FACT_SECFee;
		
		private int _FACT_MarginFee;
		
		public Staging_TradesDWView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol_SymbolValue", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Symbol_SymbolValue
		{
			get
			{
				return this._Symbol_SymbolValue;
			}
			set
			{
				if ((this._Symbol_SymbolValue != value))
				{
					this._Symbol_SymbolValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol_FullName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Symbol_FullName
		{
			get
			{
				return this._Symbol_FullName;
			}
			set
			{
				if ((this._Symbol_FullName != value))
				{
					this._Symbol_FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Account_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Account_AccountName
		{
			get
			{
				return this._IGNORE_Account_AccountName;
			}
			set
			{
				if ((this._IGNORE_Account_AccountName != value))
				{
					this._IGNORE_Account_AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Desk_DeskName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Desk_DeskName
		{
			get
			{
				return this._IGNORE_Desk_DeskName;
			}
			set
			{
				if ((this._IGNORE_Desk_DeskName != value))
				{
					this._IGNORE_Desk_DeskName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Trader_TraderName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Trader_TraderName
		{
			get
			{
				return this._IGNORE_Trader_TraderName;
			}
			set
			{
				if ((this._IGNORE_Trader_TraderName != value))
				{
					this._IGNORE_Trader_TraderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_ExecutionTimeKey", DbType="DateTime NOT NULL")]
		public System.DateTime FACT_ExecutionTimeKey
		{
			get
			{
				return this._FACT_ExecutionTimeKey;
			}
			set
			{
				if ((this._FACT_ExecutionTimeKey != value))
				{
					this._FACT_ExecutionTimeKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side_SideValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Side_SideValue
		{
			get
			{
				return this._Side_SideValue;
			}
			set
			{
				if ((this._Side_SideValue != value))
				{
					this._Side_SideValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_Price", DbType="Money NOT NULL")]
		public decimal FACT_Price
		{
			get
			{
				return this._FACT_Price;
			}
			set
			{
				if ((this._FACT_Price != value))
				{
					this._FACT_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_Size", DbType="Float NOT NULL")]
		public double FACT_Size
		{
			get
			{
				return this._FACT_Size;
			}
			set
			{
				if ((this._FACT_Size != value))
				{
					this._FACT_Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_ExecutionId", DbType="BigInt NOT NULL")]
		public long IGNORE_ExecutionId
		{
			get
			{
				return this._IGNORE_ExecutionId;
			}
			set
			{
				if ((this._IGNORE_ExecutionId != value))
				{
					this._IGNORE_ExecutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_ExchangeFee", DbType="Int NOT NULL")]
		public int FACT_ExchangeFee
		{
			get
			{
				return this._FACT_ExchangeFee;
			}
			set
			{
				if ((this._FACT_ExchangeFee != value))
				{
					this._FACT_ExchangeFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_BrokerFee", DbType="Int NOT NULL")]
		public int FACT_BrokerFee
		{
			get
			{
				return this._FACT_BrokerFee;
			}
			set
			{
				if ((this._FACT_BrokerFee != value))
				{
					this._FACT_BrokerFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_SECFee", DbType="Int NOT NULL")]
		public int FACT_SECFee
		{
			get
			{
				return this._FACT_SECFee;
			}
			set
			{
				if ((this._FACT_SECFee != value))
				{
					this._FACT_SECFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_MarginFee", DbType="Int NOT NULL")]
		public int FACT_MarginFee
		{
			get
			{
				return this._FACT_MarginFee;
			}
			set
			{
				if ((this._FACT_MarginFee != value))
				{
					this._FACT_MarginFee = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.TradesDWViewInvalidExtraCol")]
	public partial class Staging_TradesDWViewInvalidExtraCol
	{
		
		private string _Symbol_SymbolValue;
		
		private string _Symbol_FullName;
		
		private string _IGNORE_Account_AccountName;
		
		private string _IGNORE_Desk_DeskName;
		
		private string _IGNORE_Trader_TraderName;
		
		private System.DateTime _FACT_ExecutionTimeKey;
		
		private string _Side_SideValue;
		
		private decimal _FACT_Price;
		
		private double _FACT_Size;
		
		private long _IGNORE_ExecutionId;
		
		private int _FACT_ExchangeFee;
		
		private int _FACT_BrokerFee;
		
		private int _FACT_SECFee;
		
		private int _FACT_MarginFee;
		
		private int _FACT_XXXX;
		
		public Staging_TradesDWViewInvalidExtraCol()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol_SymbolValue", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Symbol_SymbolValue
		{
			get
			{
				return this._Symbol_SymbolValue;
			}
			set
			{
				if ((this._Symbol_SymbolValue != value))
				{
					this._Symbol_SymbolValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol_FullName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Symbol_FullName
		{
			get
			{
				return this._Symbol_FullName;
			}
			set
			{
				if ((this._Symbol_FullName != value))
				{
					this._Symbol_FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Account_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Account_AccountName
		{
			get
			{
				return this._IGNORE_Account_AccountName;
			}
			set
			{
				if ((this._IGNORE_Account_AccountName != value))
				{
					this._IGNORE_Account_AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Desk_DeskName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Desk_DeskName
		{
			get
			{
				return this._IGNORE_Desk_DeskName;
			}
			set
			{
				if ((this._IGNORE_Desk_DeskName != value))
				{
					this._IGNORE_Desk_DeskName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Trader_TraderName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Trader_TraderName
		{
			get
			{
				return this._IGNORE_Trader_TraderName;
			}
			set
			{
				if ((this._IGNORE_Trader_TraderName != value))
				{
					this._IGNORE_Trader_TraderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_ExecutionTimeKey", DbType="DateTime NOT NULL")]
		public System.DateTime FACT_ExecutionTimeKey
		{
			get
			{
				return this._FACT_ExecutionTimeKey;
			}
			set
			{
				if ((this._FACT_ExecutionTimeKey != value))
				{
					this._FACT_ExecutionTimeKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side_SideValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Side_SideValue
		{
			get
			{
				return this._Side_SideValue;
			}
			set
			{
				if ((this._Side_SideValue != value))
				{
					this._Side_SideValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_Price", DbType="Money NOT NULL")]
		public decimal FACT_Price
		{
			get
			{
				return this._FACT_Price;
			}
			set
			{
				if ((this._FACT_Price != value))
				{
					this._FACT_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_Size", DbType="Float NOT NULL")]
		public double FACT_Size
		{
			get
			{
				return this._FACT_Size;
			}
			set
			{
				if ((this._FACT_Size != value))
				{
					this._FACT_Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_ExecutionId", DbType="BigInt NOT NULL")]
		public long IGNORE_ExecutionId
		{
			get
			{
				return this._IGNORE_ExecutionId;
			}
			set
			{
				if ((this._IGNORE_ExecutionId != value))
				{
					this._IGNORE_ExecutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_ExchangeFee", DbType="Int NOT NULL")]
		public int FACT_ExchangeFee
		{
			get
			{
				return this._FACT_ExchangeFee;
			}
			set
			{
				if ((this._FACT_ExchangeFee != value))
				{
					this._FACT_ExchangeFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_BrokerFee", DbType="Int NOT NULL")]
		public int FACT_BrokerFee
		{
			get
			{
				return this._FACT_BrokerFee;
			}
			set
			{
				if ((this._FACT_BrokerFee != value))
				{
					this._FACT_BrokerFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_SECFee", DbType="Int NOT NULL")]
		public int FACT_SECFee
		{
			get
			{
				return this._FACT_SECFee;
			}
			set
			{
				if ((this._FACT_SECFee != value))
				{
					this._FACT_SECFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_MarginFee", DbType="Int NOT NULL")]
		public int FACT_MarginFee
		{
			get
			{
				return this._FACT_MarginFee;
			}
			set
			{
				if ((this._FACT_MarginFee != value))
				{
					this._FACT_MarginFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_XXXX", DbType="Int NOT NULL")]
		public int FACT_XXXX
		{
			get
			{
				return this._FACT_XXXX;
			}
			set
			{
				if ((this._FACT_XXXX != value))
				{
					this._FACT_XXXX = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="staging.TradesDWViewInvalidMissingCol")]
	public partial class Staging_TradesDWViewInvalidMissingCol
	{
		
		private string _Symbol_SymbolValue;
		
		private string _Symbol_FullName;
		
		private string _IGNORE_Account_AccountName;
		
		private string _IGNORE_Desk_DeskName;
		
		private string _IGNORE_Trader_TraderName;
		
		private System.DateTime _FACT_ExecutionTimeKey;
		
		private string _Side_SideValue;
		
		private decimal _FACT_Price;
		
		private double _FACT_Size;
		
		private long _IGNORE_ExecutionId;
		
		private int _FACT_ExchangeFee;
		
		private int _FACT_BrokerFee;
		
		private int _FACT_SECFee;
		
		private int _NADim_DimValue;
		
		public Staging_TradesDWViewInvalidMissingCol()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol_SymbolValue", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Symbol_SymbolValue
		{
			get
			{
				return this._Symbol_SymbolValue;
			}
			set
			{
				if ((this._Symbol_SymbolValue != value))
				{
					this._Symbol_SymbolValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Symbol_FullName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string Symbol_FullName
		{
			get
			{
				return this._Symbol_FullName;
			}
			set
			{
				if ((this._Symbol_FullName != value))
				{
					this._Symbol_FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Account_AccountName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Account_AccountName
		{
			get
			{
				return this._IGNORE_Account_AccountName;
			}
			set
			{
				if ((this._IGNORE_Account_AccountName != value))
				{
					this._IGNORE_Account_AccountName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Desk_DeskName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Desk_DeskName
		{
			get
			{
				return this._IGNORE_Desk_DeskName;
			}
			set
			{
				if ((this._IGNORE_Desk_DeskName != value))
				{
					this._IGNORE_Desk_DeskName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_Trader_TraderName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IGNORE_Trader_TraderName
		{
			get
			{
				return this._IGNORE_Trader_TraderName;
			}
			set
			{
				if ((this._IGNORE_Trader_TraderName != value))
				{
					this._IGNORE_Trader_TraderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_ExecutionTimeKey", DbType="DateTime NOT NULL")]
		public System.DateTime FACT_ExecutionTimeKey
		{
			get
			{
				return this._FACT_ExecutionTimeKey;
			}
			set
			{
				if ((this._FACT_ExecutionTimeKey != value))
				{
					this._FACT_ExecutionTimeKey = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side_SideValue", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Side_SideValue
		{
			get
			{
				return this._Side_SideValue;
			}
			set
			{
				if ((this._Side_SideValue != value))
				{
					this._Side_SideValue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_Price", DbType="Money NOT NULL")]
		public decimal FACT_Price
		{
			get
			{
				return this._FACT_Price;
			}
			set
			{
				if ((this._FACT_Price != value))
				{
					this._FACT_Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_Size", DbType="Float NOT NULL")]
		public double FACT_Size
		{
			get
			{
				return this._FACT_Size;
			}
			set
			{
				if ((this._FACT_Size != value))
				{
					this._FACT_Size = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IGNORE_ExecutionId", DbType="BigInt NOT NULL")]
		public long IGNORE_ExecutionId
		{
			get
			{
				return this._IGNORE_ExecutionId;
			}
			set
			{
				if ((this._IGNORE_ExecutionId != value))
				{
					this._IGNORE_ExecutionId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_ExchangeFee", DbType="Int NOT NULL")]
		public int FACT_ExchangeFee
		{
			get
			{
				return this._FACT_ExchangeFee;
			}
			set
			{
				if ((this._FACT_ExchangeFee != value))
				{
					this._FACT_ExchangeFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_BrokerFee", DbType="Int NOT NULL")]
		public int FACT_BrokerFee
		{
			get
			{
				return this._FACT_BrokerFee;
			}
			set
			{
				if ((this._FACT_BrokerFee != value))
				{
					this._FACT_BrokerFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FACT_SECFee", DbType="Int NOT NULL")]
		public int FACT_SECFee
		{
			get
			{
				return this._FACT_SECFee;
			}
			set
			{
				if ((this._FACT_SECFee != value))
				{
					this._FACT_SECFee = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NADim_DimValue", DbType="Int NOT NULL")]
		public int NADim_DimValue
		{
			get
			{
				return this._NADim_DimValue;
			}
			set
			{
				if ((this._NADim_DimValue != value))
				{
					this._NADim_DimValue = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
